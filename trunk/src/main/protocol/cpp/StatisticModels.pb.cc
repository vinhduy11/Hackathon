// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatisticModels.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StatisticModels.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace mservice {
namespace momo {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNumberReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNumberReply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ActionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_StatisticModels_2eproto() {
  protobuf_AddDesc_StatisticModels_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "StatisticModels.proto");
  GOOGLE_CHECK(file != NULL);
  Action_descriptor_ = file->message_type(0);
  static const int Action_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, number_),
  };
  Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Action));
  GetNumber_descriptor_ = file->message_type(1);
  static const int GetNumber_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumber, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumber, startdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumber, enddate_),
  };
  GetNumber_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNumber_descriptor_,
      GetNumber::default_instance_,
      GetNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumber, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumber, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNumber));
  GetNumberReply_descriptor_ = file->message_type(2);
  static const int GetNumberReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumberReply, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumberReply, number_),
  };
  GetNumberReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNumberReply_descriptor_,
      GetNumberReply::default_instance_,
      GetNumberReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumberReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNumberReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNumberReply));
  ActionType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_StatisticModels_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Action_descriptor_, &Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNumber_descriptor_, &GetNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNumberReply_descriptor_, &GetNumberReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_StatisticModels_2eproto() {
  delete Action::default_instance_;
  delete Action_reflection_;
  delete GetNumber::default_instance_;
  delete GetNumber_reflection_;
  delete GetNumberReply::default_instance_;
  delete GetNumberReply_reflection_;
}

void protobuf_AddDesc_StatisticModels_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025StatisticModels.proto\022\025com.mservice.mo"
    "mo.msg\"I\n\006Action\022/\n\004type\030\001 \002(\0162!.com.mse"
    "rvice.momo.msg.ActionType\022\016\n\006number\030\002 \001("
    "\r\"`\n\tGetNumber\022/\n\004type\030\001 \002(\0162!.com.mserv"
    "ice.momo.msg.ActionType\022\021\n\tstartDate\030\002 \001"
    "(\004\022\017\n\007endDate\030\003 \001(\004\"Q\n\016GetNumberReply\022/\n"
    "\004type\030\001 \002(\0162!.com.mservice.momo.msg.Acti"
    "onType\022\016\n\006number\030\002 \001(\004*\332\037\n\nActionType\022\t\n"
    "\005TRANS\020\001\022\021\n\rTRANS_SUCCESS\020\002\022\021\n\rTRANS_BAN"
    "K_IN\020\003\022\031\n\025TRANS_BANK_IN_SUCCESS\020\004\022\024\n\020TRA"
    "NS_BANK_IN_20\020\005\022\034\n\030TRANS_BANK_IN_20_SUCC"
    "ESS\020\006\022\024\n\020TRANS_BANK_IN_50\020\007\022\034\n\030TRANS_BAN"
    "K_IN_50_SUCCESS\020\010\022\025\n\021TRANS_BANK_IN_100\020\t"
    "\022\035\n\031TRANS_BANK_IN_100_SUCCESS\020\n\022\025\n\021TRANS"
    "_BANK_IN_200\020\013\022\035\n\031TRANS_BANK_IN_200_SUCC"
    "ESS\020\014\022\025\n\021TRANS_BANK_IN_500\020\r\022\035\n\031TRANS_BA"
    "NK_IN_500_SUCCESS\020\016\022\025\n\021TRANS_BANK_IN_MAX"
    "\020\017\022\035\n\031TRANS_BANK_IN_MAX_SUCCESS\020\020\022\022\n\016TRA"
    "NS_BANK_OUT\020\021\022\032\n\026TRANS_BANK_OUT_SUCCESS\020"
    "\022\022\025\n\021TRANS_BANK_OUT_20\020\023\022\035\n\031TRANS_BANK_O"
    "UT_20_SUCCESS\020\024\022\025\n\021TRANS_BANK_OUT_50\020\025\022\035"
    "\n\031TRANS_BANK_OUT_50_SUCCESS\020\026\022\026\n\022TRANS_B"
    "ANK_OUT_100\020\027\022\036\n\032TRANS_BANK_OUT_100_SUCC"
    "ESS\020\030\022\026\n\022TRANS_BANK_OUT_200\020\031\022\036\n\032TRANS_B"
    "ANK_OUT_200_SUCCESS\020\032\022\026\n\022TRANS_BANK_OUT_"
    "500\020\033\022\036\n\032TRANS_BANK_OUT_500_SUCCESS\020\034\022\026\n"
    "\022TRANS_BANK_OUT_MAX\020\035\022\036\n\032TRANS_BANK_OUT_"
    "MAX_SUCCESS\020\036\022\020\n\014TRANS_TOP_UP\020\037\022\030\n\024TRANS"
    "_TOP_UP_SUCCESS\020 \022\023\n\017TRANS_TOP_UP_20\020!\022\033"
    "\n\027TRANS_TOP_UP_20_SUCCESS\020\"\022\023\n\017TRANS_TOP"
    "_UP_50\020#\022\033\n\027TRANS_TOP_UP_50_SUCCESS\020$\022\024\n"
    "\020TRANS_TOP_UP_100\020%\022\034\n\030TRANS_TOP_UP_100_"
    "SUCCESS\020&\022\024\n\020TRANS_TOP_UP_200\020\'\022\034\n\030TRANS"
    "_TOP_UP_200_SUCCESS\020(\022\024\n\020TRANS_TOP_UP_50"
    "0\020)\022\034\n\030TRANS_TOP_UP_500_SUCCESS\020*\022\024\n\020TRA"
    "NS_TOP_UP_MAX\020+\022\034\n\030TRANS_TOP_UP_MAX_SUCC"
    "ESS\020,\022\025\n\021TRANS_TOP_UP_GAME\020-\022\035\n\031TRANS_TO"
    "P_UP_GAME_SUCCESS\020.\022\030\n\024TRANS_TOP_UP_GAME"
    "_20\020/\022 \n\034TRANS_TOP_UP_GAME_20_SUCCESS\0200\022"
    "\030\n\024TRANS_TOP_UP_GAME_50\0201\022 \n\034TRANS_TOP_U"
    "P_GAME_50_SUCCESS\0202\022\031\n\025TRANS_TOP_UP_GAME"
    "_100\0203\022!\n\035TRANS_TOP_UP_GAME_100_SUCCESS\020"
    "4\022\031\n\025TRANS_TOP_UP_GAME_200\0205\022!\n\035TRANS_TO"
    "P_UP_GAME_200_SUCCESS\0206\022\031\n\025TRANS_TOP_UP_"
    "GAME_500\0207\022!\n\035TRANS_TOP_UP_GAME_500_SUCC"
    "ESS\0208\022\031\n\025TRANS_TOP_UP_GAME_MAX\0209\022!\n\035TRAN"
    "S_TOP_UP_GAME_MAX_SUCCESS\020:\022\r\n\tTRANS_M2C"
    "\020;\022\025\n\021TRANS_M2C_SUCCESS\020<\022\020\n\014TRANS_M2C_2"
    "0\020=\022\030\n\024TRANS_M2C_20_SUCCESS\020>\022\020\n\014TRANS_M"
    "2C_50\020\?\022\030\n\024TRANS_M2C_50_SUCCESS\020@\022\021\n\rTRA"
    "NS_M2C_100\020A\022\031\n\025TRANS_M2C_100_SUCCESS\020B\022"
    "\021\n\rTRANS_M2C_200\020C\022\031\n\025TRANS_M2C_200_SUCC"
    "ESS\020D\022\021\n\rTRANS_M2C_500\020E\022\031\n\025TRANS_M2C_50"
    "0_SUCCESS\020F\022\021\n\rTRANS_M2C_MAX\020G\022\031\n\025TRANS_"
    "M2C_MAX_SUCCESS\020H\022\r\n\tTRANS_M2M\020I\022\025\n\021TRAN"
    "S_M2M_SUCCESS\020J\022\020\n\014TRANS_M2M_20\020K\022\030\n\024TRA"
    "NS_M2M_20_SUCCESS\020L\022\020\n\014TRANS_M2M_50\020M\022\030\n"
    "\024TRANS_M2M_50_SUCCESS\020N\022\021\n\rTRANS_M2M_100"
    "\020O\022\031\n\025TRANS_M2M_100_SUCCESS\020P\022\021\n\rTRANS_M"
    "2M_200\020Q\022\031\n\025TRANS_M2M_200_SUCCESS\020R\022\021\n\rT"
    "RANS_M2M_500\020S\022\031\n\025TRANS_M2M_500_SUCCESS\020"
    "T\022\021\n\rTRANS_M2M_MAX\020U\022\031\n\025TRANS_M2M_MAX_SU"
    "CCESS\020V\022\026\n\022TRANS_PAY_ONE_BILL\020W\022\036\n\032TRANS"
    "_PAY_ONE_BILL_SUCCESS\020X\022\031\n\025TRANS_PAY_ONE"
    "_BILL_20\020Y\022!\n\035TRANS_PAY_ONE_BILL_20_SUCC"
    "ESS\020Z\022\031\n\025TRANS_PAY_ONE_BILL_50\020[\022!\n\035TRAN"
    "S_PAY_ONE_BILL_50_SUCCESS\020\\\022\032\n\026TRANS_PAY"
    "_ONE_BILL_100\020]\022\"\n\036TRANS_PAY_ONE_BILL_10"
    "0_SUCCESS\020^\022\032\n\026TRANS_PAY_ONE_BILL_200\020_\022"
    "\"\n\036TRANS_PAY_ONE_BILL_200_SUCCESS\020`\022\032\n\026T"
    "RANS_PAY_ONE_BILL_500\020a\022\"\n\036TRANS_PAY_ONE"
    "_BILL_500_SUCCESS\020b\022\032\n\026TRANS_PAY_ONE_BIL"
    "L_MAX\020c\022\"\n\036TRANS_PAY_ONE_BILL_MAX_SUCCES"
    "S\020d\022\027\n\023TRANS_QUICK_PAYMENT\020e\022\037\n\033TRANS_QU"
    "ICK_PAYMENT_SUCCESS\020f\022\032\n\026TRANS_QUICK_PAY"
    "MENT_20\020g\022\"\n\036TRANS_QUICK_PAYMENT_20_SUCC"
    "ESS\020h\022\032\n\026TRANS_QUICK_PAYMENT_50\020i\022\"\n\036TRA"
    "NS_QUICK_PAYMENT_50_SUCCESS\020j\022\033\n\027TRANS_Q"
    "UICK_PAYMENT_100\020k\022#\n\037TRANS_QUICK_PAYMEN"
    "T_100_SUCCESS\020l\022\033\n\027TRANS_QUICK_PAYMENT_2"
    "00\020m\022#\n\037TRANS_QUICK_PAYMENT_200_SUCCESS\020"
    "n\022\033\n\027TRANS_QUICK_PAYMENT_500\020o\022#\n\037TRANS_"
    "QUICK_PAYMENT_500_SUCCESS\020p\022\033\n\027TRANS_QUI"
    "CK_PAYMENT_MAX\020q\022#\n\037TRANS_QUICK_PAYMENT_"
    "MAX_SUCCESS\020r\022\027\n\023TRANS_QUICK_DEPOSIT\020s\022\037"
    "\n\033TRANS_QUICK_DEPOSIT_SUCCESS\020t\022\032\n\026TRANS"
    "_QUICK_DEPOSIT_20\020u\022\"\n\036TRANS_QUICK_DEPOS"
    "IT_20_SUCCESS\020v\022\032\n\026TRANS_QUICK_DEPOSIT_5"
    "0\020w\022\"\n\036TRANS_QUICK_DEPOSIT_50_SUCCESS\020x\022"
    "\033\n\027TRANS_QUICK_DEPOSIT_100\020y\022#\n\037TRANS_QU"
    "ICK_DEPOSIT_100_SUCCESS\020z\022\033\n\027TRANS_QUICK"
    "_DEPOSIT_200\020{\022#\n\037TRANS_QUICK_DEPOSIT_20"
    "0_SUCCESS\020|\022\033\n\027TRANS_QUICK_DEPOSIT_500\020}"
    "\022#\n\037TRANS_QUICK_DEPOSIT_500_SUCCESS\020~\022\033\n"
    "\027TRANS_QUICK_DEPOSIT_MAX\020\177\022$\n\037TRANS_QUIC"
    "K_DEPOSIT_MAX_SUCCESS\020\200\001\022\033\n\026TRAN_SBANK_N"
    "ET_TO_MOMO\020\201\001\022#\n\036TRAN_SBANK_NET_TO_MOMO_"
    "SUCCESS\020\202\001\022\036\n\031TRAN_SBANK_NET_TO_MOMO_20\020"
    "\203\001\022&\n!TRAN_SBANK_NET_TO_MOMO_20_SUCCESS\020"
    "\204\001\022\036\n\031TRAN_SBANK_NET_TO_MOMO_50\020\205\001\022&\n!TR"
    "AN_SBANK_NET_TO_MOMO_50_SUCCESS\020\206\001\022\037\n\032TR"
    "AN_SBANK_NET_TO_MOMO_100\020\207\001\022\'\n\"TRAN_SBAN"
    "K_NET_TO_MOMO_100_SUCCESS\020\210\001\022\037\n\032TRAN_SBA"
    "NK_NET_TO_MOMO_200\020\211\001\022\'\n\"TRAN_SBANK_NET_"
    "TO_MOMO_200_SUCCESS\020\212\001\022\037\n\032TRAN_SBANK_NET"
    "_TO_MOMO_500\020\213\001\022\'\n\"TRAN_SBANK_NET_TO_MOM"
    "O_500_SUCCESS\020\214\001\022\037\n\032TRAN_SBANK_NET_TO_MO"
    "MO_MAX\020\215\001\022\'\n\"TRAN_SBANK_NET_TO_MOMO_MAX_"
    "SUCCESS\020\216\001\022\r\n\010WEB_USER\020\217\001\022\020\n\013MOBILE_USER"
    "\020\220\001", 4363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StatisticModels.proto", &protobuf_RegisterTypes);
  Action::default_instance_ = new Action();
  GetNumber::default_instance_ = new GetNumber();
  GetNumberReply::default_instance_ = new GetNumberReply();
  Action::default_instance_->InitAsDefaultInstance();
  GetNumber::default_instance_->InitAsDefaultInstance();
  GetNumberReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_StatisticModels_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_StatisticModels_2eproto {
  StaticDescriptorInitializer_StatisticModels_2eproto() {
    protobuf_AddDesc_StatisticModels_2eproto();
  }
} static_descriptor_initializer_StatisticModels_2eproto_;
const ::google::protobuf::EnumDescriptor* ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionType_descriptor_;
}
bool ActionType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Action::kTypeFieldNumber;
const int Action::kNumberFieldNumber;
#endif  // !_MSC_VER

Action::Action()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Action::InitAsDefaultInstance() {
}

Action::Action(const Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  number_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  SharedDtor();
}

void Action::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticModels_2eproto();
  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New() const {
  return new Action;
}

void Action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    number_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.mservice.momo.msg.ActionType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::mservice::momo::msg::ActionType_IsValid(value)) {
            set_type(static_cast< ::com::mservice::momo::msg::ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }

      // optional uint32 number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.mservice.momo.msg.ActionType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint32 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Action::Swap(Action* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNumber::kTypeFieldNumber;
const int GetNumber::kStartDateFieldNumber;
const int GetNumber::kEndDateFieldNumber;
#endif  // !_MSC_VER

GetNumber::GetNumber()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetNumber::InitAsDefaultInstance() {
}

GetNumber::GetNumber(const GetNumber& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetNumber::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  startdate_ = GOOGLE_ULONGLONG(0);
  enddate_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNumber::~GetNumber() {
  SharedDtor();
}

void GetNumber::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNumber_descriptor_;
}

const GetNumber& GetNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticModels_2eproto();
  return *default_instance_;
}

GetNumber* GetNumber::default_instance_ = NULL;

GetNumber* GetNumber::New() const {
  return new GetNumber;
}

void GetNumber::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    startdate_ = GOOGLE_ULONGLONG(0);
    enddate_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.mservice.momo.msg.ActionType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::mservice::momo::msg::ActionType_IsValid(value)) {
            set_type(static_cast< ::com::mservice::momo::msg::ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_startDate;
        break;
      }

      // optional uint64 startDate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &startdate_)));
          set_has_startdate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_endDate;
        break;
      }

      // optional uint64 endDate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &enddate_)));
          set_has_enddate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint64 startDate = 2;
  if (has_startdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->startdate(), output);
  }

  // optional uint64 endDate = 3;
  if (has_enddate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->enddate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint64 startDate = 2;
  if (has_startdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->startdate(), target);
  }

  // optional uint64 endDate = 3;
  if (has_enddate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->enddate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetNumber::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.mservice.momo.msg.ActionType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint64 startDate = 2;
    if (has_startdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->startdate());
    }

    // optional uint64 endDate = 3;
    if (has_enddate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->enddate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNumber::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNumber* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNumber*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNumber::MergeFrom(const GetNumber& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_startdate()) {
      set_startdate(from.startdate());
    }
    if (from.has_enddate()) {
      set_enddate(from.enddate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNumber::CopyFrom(const GetNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetNumber::Swap(GetNumber* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(startdate_, other->startdate_);
    std::swap(enddate_, other->enddate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNumber_descriptor_;
  metadata.reflection = GetNumber_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNumberReply::kTypeFieldNumber;
const int GetNumberReply::kNumberFieldNumber;
#endif  // !_MSC_VER

GetNumberReply::GetNumberReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetNumberReply::InitAsDefaultInstance() {
}

GetNumberReply::GetNumberReply(const GetNumberReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetNumberReply::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  number_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNumberReply::~GetNumberReply() {
  SharedDtor();
}

void GetNumberReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNumberReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNumberReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNumberReply_descriptor_;
}

const GetNumberReply& GetNumberReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticModels_2eproto();
  return *default_instance_;
}

GetNumberReply* GetNumberReply::default_instance_ = NULL;

GetNumberReply* GetNumberReply::New() const {
  return new GetNumberReply;
}

void GetNumberReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    number_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNumberReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.mservice.momo.msg.ActionType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::mservice::momo::msg::ActionType_IsValid(value)) {
            set_type(static_cast< ::com::mservice::momo::msg::ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }

      // optional uint64 number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetNumberReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint64 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetNumberReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .com.mservice.momo.msg.ActionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint64 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetNumberReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.mservice.momo.msg.ActionType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint64 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNumberReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNumberReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNumberReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNumberReply::MergeFrom(const GetNumberReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNumberReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNumberReply::CopyFrom(const GetNumberReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNumberReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetNumberReply::Swap(GetNumberReply* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNumberReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNumberReply_descriptor_;
  metadata.reflection = GetNumberReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace momo
}  // namespace mservice
}  // namespace com

// @@protoc_insertion_point(global_scope)
