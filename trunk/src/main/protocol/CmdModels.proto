package com.mservice.momo.msg;

enum CommandType {
    ERROR = 1;

    SEND_OTP = 2;
    SEND_OTP_REPLY = 3;

    VERIFY_OTP = 4;
    VERIFY_OTP_REPLY = 5;

    REGISTER = 6;
    REGISTER_REPLY = 7;

    GET_AGENT_INFO = 8;
    GET_AGENT_INFO_REPLY = 9;

    IS_PIN_CORRECT = 10;
    IS_PIN_CORRECT_REPLY = 11;

    CHANGE_PIN = 12;
    CHANGE_PIN_REPLY = 13;

    MODIFY_ARTICLE = 14;
    MODIFY_ARTICLE_REPLY = 15;

    GET_ARTICLE_PAGE = 16;
    GET_ARTICLE_PAGE_REPLY = 17;

    MODIFY_BANK_ACCOUNT = 18;
    MODIFY_BANK_ACCOUNT_REPLY = 19;

    GET_AGENT_BANK_ACCOUNTS = 20;
    GET_AGENT_BANK_ACCOUNTS_REPLY = 21;

    GET_TRANSACTION = 22;
    GET_TRANSACTION_REPLY = 23;

    GET_TRANSACTION_DETAIL = 24;
    GET_TRANSACTION_DETAIL_REPLY = 25;

    TOPUP = 26;
    TOPUP_REPLY = 27;

    TOPUP_GAME = 28;
    TOPUP_GAME_REPLY = 29;

    TRANSFER_M2M = 30;
    TRANSFER_M2M_REPLY = 31;

    TRANSFER_M2C = 32;
    TRANSFER_M2C_REPLY = 33;

    GET_BILL_INFO = 34;
    GET_BILL_INFO_REPLY = 35;

    PAY_BILL = 36;
    PAY_BILL_REPLY= 37;

    BANK_IN = 38;
    BANK_IN_REPLY = 39;

    BANK_OUT = 40;
    BANK_OUT_REPLY = 41;

    BANK_NET_TO_MOMO = 42;
    BANK_NET_TO_MOMO_REPLY = 43;

    VERIFY_BANKNET_OTP = 44;
    VERIFY_BANKNET_OTP_REPLY = 45;

    GET_STORE_AROUND = 46;
    GET_STORE_AROUND_REPLY = 47;

    SAVE_BILL = 48;
    SAVE_BILL_REPLY = 49;

    KEY_VALUE_DATA = 50;
    KEY_VALUE_DATA_REPLY = 51;

    GET_STORE_BY_CODE = 52;
    GET_STORE_BY_CODE_REPLY = 53;

    PAY_123MUA_ORDER = 54;
    PAY_123MUA_ORDER_REPLY = 55;

    UPDATE_AGENT_INFO = 56;
    UPDATE_AGENT_INFO_REPLY = 57;

    DEPOSIT_WITHDRAW_AT_PLACE = 58;
    DEPOSIT_WITHDRAW_AT_PLACE_REPLY = 59;

    GET_AVATAR_UPLOAD_TOKEN = 60;
    GET_AVATAR_UPLOAD_TOKEN_REPLY = 61;

    GET_SAVED_BILL = 62;
    GET_SAVED_BILL_REPLY = 63;

    REMOVE_SAVED_BILL = 64;
    REMOVE_SAVED_BILL_REPLY = 65;

    GET_TRANSACTION_FEE = 66;
    GET_TRANSACTION_FEE_REPLY = 67;

    PAY_AIRLINE_TICKET = 68;
    PAY_AIRLINE_TICKET_REPLY = 69;

    SEND_SMS = 70;
    SEND_SMS_REPLY = 71;

    WITHDRAW_BY_AGENT = 72;
    WITHDRAW_BY_AGENT_REPLY = 73;

    BANK_OUT_MANUAL = 74;
    BANK_OUT_MANUAL_REPLY = 75;

    IS_MOMOER = 76;
    IS_MOMOER_REPLY = 77;

    COUNT_AGENT_TRAN = 78;
    COUNT_AGENT_TRAN_REPLY = 79;

    MAKE_TRAN = 80;
    MAKE_TRAN_REPLY = 81;

    GET_SERVICE_LAYOUT = 82;
    GET_SERVICE_LAYOUT_REPLY = 83;

    COMPLETE_TRAN = 84;
    COMPLETE_TRAN_REPLY = 85;

    DO_TRAN = 86;
    DO_TRAN_REPLY = 87;

    GET_SERVICE = 88;
    GET_SERVICE_REPLY = 89;
}
//======================================================================
message Error {
    required sint32 code = 1;
    optional string description = 2;
}

//================================OTP======================================
message SendOtp {
    required uint32 phoneNumber = 1;
}
message SendOtpReply {
    required uint32 phoneNumber = 1;
    required string otp = 2;
}


message VerifyOtp {
    required uint32 phoneNumber = 1;
    required string otp = 2;
}
message VerifyOtpReply {
    enum ResultCode {
        SUCCESS = 1;
        NOT_MATCH = 2;
        OUT_OF_TIME = 3;
    }
    required uint32 phoneNumber = 1;
    required ResultCode result = 2;
}


//===============================AGENT INFO=======================================
message Register {
    required uint32 phoneNumber = 1;
    required string name = 2;
    required string cardId = 3;
    required string pin = 4;
    optional string email = 5;
    optional string question = 6;
    optional string answer = 7;
}
message RegisterReply {
    enum ResultCode {
        SUCCESS = 1;
        NUMBER_EXISTED = 2;
    }
    required uint32 phoneNumber = 1;
    required ResultCode result = 2;
}


message GetAgentInfo {
    required uint32 phoneNumber = 1;
}
message GetAgentInfoReply {
    required uint32 phoneNumber = 1;
    optional string name = 2;
    optional string cardId = 3;
    optional string pin = 4;
    optional string email = 5;
    optional string question = 6;
    optional string answer = 7;

    optional string bankAccount = 8;
    optional string bankCode = 9;
    optional string bankName = 10;

    optional uint64 point = 11;
    optional uint64 momo = 12;
    optional uint64 mload = 13;
    optional bool isNamedAccount = 14;

    optional bool isActive = 15;
    optional string birthday = 16;
    optional string address = 17;
    optional uint64 createdDate = 18;
}


message IsPinCorrect {
    required uint32 phoneNumber = 1;
    optional string pin = 2;
}
message IsPinCorrectReply {
    enum ResultCode {
        CORRECT = 1;
        INCORRECT = 2;
        AUTH_EXPIRED = 3;
        AUTH_RETRY_EXCEED = 4;
    }
    required uint32 phoneNumber = 1;
    required ResultCode result = 2;
    optional uint64 locktill = 3;
}


message ChangePin {
    required uint32 phoneNumber = 1;
    required string oldPin = 2;
    required string newPin = 3;
}
message ChangePinReply {
    enum ResultCode {
        SUCCESS = 1;
        PIN_INCORRECT = 2;
        BAD_PASSWORD = 3;
        SAME_PASSWORD = 4;
        PASSWORD_PREVIOUS_USED = 5;
    }
    required uint32 phoneNumber = 1;
    required ResultCode result = 2;
}


message UpdateAgentInfo {
    required uint32 phoneNumber = 1;
    optional string name = 2;
    optional string address = 3;
    optional string email = 4;
    optional string cardId = 5;
    optional string dob = 6;
}
message UpdateAgentInfoReply {
    enum ResultCode {
        SUCCESS = 1;
        FAIL = 2;
    }
    required uint32 phoneNumber = 1;
    required ResultCode result = 2;
}

//=========================ARTICLE============================================
message Article {
    optional string id = 1;
    optional bool active = 2;
    optional uint64 postDate = 3;
    optional string title = 4;
    optional string summary = 5;
    optional string detail = 6;
}

message ModifyArticle {
    enum Command {
        ADD = 1;
        UPDATE = 2;
        DELETE = 3;
    }
    required Command command = 1;
    required Article article = 2;
}
message ModifyArticleReply {
    enum ResultCode {
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    required ResultCode result = 2;
    optional Article article = 3;
}

message GetArticlePage {
    required uint32 pageSize = 1;
    required uint32 pageNumber = 2;
}
message GetArticlePageReply {
    required uint32 pageCount = 1;
    repeated Article articles = 2;
}

//=========================Bank Account============================================
message BankAccount {
    required uint32 phoneNumber = 2;
    required string accountId = 3;
    optional string bankName = 4;
    optional string ownerName = 5;
    optional uint64 createdDate = 6;
    optional string bankId = 7;
}
message ModifyBankAccount {
    enum Command {
        ADD = 1;
        UPDATE = 2;
        DELETE = 3;
    }
    required Command command = 1;
    required BankAccount account = 2;
}
message ModifyBankAccountReply {
    enum ResultCode {
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    required ResultCode result = 2;
    optional BankAccount bankAccount = 3;
}


message GetAgentBankAccounts {
    required uint32 phoneNumber = 1;
}
message GetAgentBankAccountsReply {
    repeated BankAccount accounts = 2;
}
//=========================Transaction============================================
enum MoneyResource {
    MOMO = 1; // qua momo
    BANKLINKED = 2;
    MASTERCARD = 3;
    VISA=4;
    BANK_NET_2_VERIFY_OTP=5;
}

enum TransactionStatus {
    SUCCESS = 1;
    FAILED = 2;
    PROCESS = 3;
    CANCELLED = 4;
    UNKNOWN_STATUS = 100;
}
/**
* *Note: Why TransactionType's types alway have "_TYPE" as a suffix?
* Because of Protobuf limitation!. All types of all enums that are defined in a global scope must have different name.
**/
enum TransactionType {
    BANK_IN_TYPE = 1;
    BANK_OUT_TYPE = 2;
    TOP_UP_TYPE = 3;
    TOP_UP_GAME_TYPE = 4;
    M2C_TYPE = 5;
    M2M_TYPE = 6;
    PAY_ONE_BILL_TYPE = 7;
    QUICK_PAYMENT_TYPE = 8;
    QUICK_DEPOSIT_TYPE= 9;
    BANK_NET_TO_MOMO_TYPE = 10;

    WITHDRAW_TO_AGENT = 13;

    PAY_TELEPHONE_BILL_TYPE = 14;
    PAY_AIRLINE_TICKET_TYPE =15; // THANH TOAN VE MAY BAY

    BANK_OUT_MANUAL_TYPE = 26;

    DEPOSIT_AT_PLACE_TYPE = 27;
    WITHDRAW_AT_HOME_TYPE = 28;
    BONUS_TYPE = 29;
    FEE_TYPE = 30;
    PHIM123_TYPE = 31;

    PAY_NUOCCL_BILL_TYPE = 32;
    PAY_AVG_BILL_TYPE = 33;

    UNKNOWN_TYPE = 100;

}
message Transaction {
    optional uint64 id = 1;
    optional uint64 time = 2;
    optional uint64 amount = 3;
    optional string partnerName = 4;
    optional TransactionType type = 5;
    optional TransactionStatus status = 6;
    optional string partnerId = 7;
}
message GetTransaction {
    required uint32 phoneNumber = 1;
    required uint32 pageSize = 2;
    required uint32 pageNumber = 3;
    optional uint64 startTime = 4;
    optional uint64 endTime = 5;
    optional TransactionStatus status = 6;
    repeated TransactionType type = 7;
}
message GetTransactionReply {
    required uint32 phoneNumber = 1;
    required uint32 pageCount = 2;
    repeated Transaction transactions = 3;
}
message GetTransactionDetail {
    required uint32 phoneNumber = 1;
    required uint64 transactionId = 2;
}
message GetTransactionDetailReply {
    required uint32 phoneNumber = 1;
    optional uint64 id = 2;
    optional uint64 time = 3;
    optional uint64 amount = 4;
    optional TransactionType type = 5;
    optional TransactionStatus status = 6;
    optional string partnerId = 7;
    optional string partnerCode = 8;
    optional string partnerName = 9;
    optional string billId = 10;
    optional string comment = 11;
    optional string partnerPref = 12;
    optional uint32 errorCode = 13;
}
//========================TOPUP================================
message Topup {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required uint32 topupPhoneNumber = 3;
    required uint64 amount = 4;
}

message TopupReply {
    enum Result {
        SUCCESS = 1;
        FAILED = 2;
//        INSUFFICIENT_FUNDS = 3;
        LOGIN_REQUIRED = 4;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}

message TopupGame {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string providerId = 3;
    required string gameAccount = 4;
    required uint64 amount = 5;
}

message TopupGameReply {
    enum TopupGameResult {
        SUCCESS = 1;
        FAILED    = 2;
    }
    required uint32 phoneNumber = 1;
    required TopupGameResult result = 2;
    optional string transactionId = 3;
}
//========================TRANSFER================================
message TransferM2m {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required uint32 receiverPhoneNumber = 3;
    required uint64 amount = 4;
    required string comment = 5;
}
message TransferM2mReply {
    enum Result {
        SUCCESS = 1;
        FAILED    = 2;
        // CoreCommon reasons: Unregistered Agent;
        ACCESS_DENIED = 3;
        LOGIN_REQUIRED = 4;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}

message TransferM2c {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string receiverName = 3;
    required string receiverCardId = 4;
    required uint32 receiverPhoneNumber = 5;
    required uint64 amount = 6;
    required string comment = 7;
}
message TransferM2cReply {
    enum Result {
        SUCCESS = 1;
        FAILED    = 2;
        // CoreCommon reasons: Unregistered Agent;
        ACCESS_DENIED = 3;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
}

message DepositWithdrawAtPlace {
    required uint32 phoneNumber = 1;
    required string address = 2;
    required uint64 amount = 3;
    required uint32 inOut = 4;
    required string maTinh = 5;
    required string maHuyen = 6;
}
message DepositWithdrawAtPlaceReply {
    enum Result {
        SUCCESS = 1;
        FAIL = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
}
//=======================BILL================================
message BillDetail {
    optional string billId = 1;
    optional uint64 amount = 2;
    optional uint64 startDate = 3;
    optional uint64 endDate = 4;
    optional string providerId = 5;
}
message GetBillInfo {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string providerId = 3;
    required string billId = 4;
}
message GetBillInfoReply {
    enum Result {
        SUCESS = 1;
        AGENT_NOT_FOUND = 2;
        BILL_NOT_FOUND = 3;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    repeated BillDetail billDetails = 3;
    optional string agentName = 4;
    optional string agentPhone = 5;
    optional string agentAddress = 6;
}

message PayBill {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string providerId = 3;
    required string billId = 4;
    required uint64 amount = 5;
    optional uint32 fromSource = 6;
}
message PayBillReply {
    enum Result {
        SUCCESS = 1;
        AGENT_NOT_FOUND = 2;
        BILL_NOT_FOUND = 3;
        UNKNOWN_SOURCE = 4;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}

message Bill {
    required uint32 phoneNumber = 1;
    required string providerId = 3;
    required string billId = 4;
}


message SaveBill {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string providerId = 3;
    required string billId = 4;
}
message SaveBillReply {
    enum Result {
        SUCCESS = 1;
        FAIL = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
}

message GetSavedBill {
    required uint32 phoneNumber = 1;
}
message GetSavedBillReply {
    required uint32 phoneNumber = 1;
    repeated BillDetail billDetails = 2;
}
message RemoveSavedBill {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string providerId = 3;
    required string billId = 4;
}
message RemoveSavedBillReply {
    enum Result {
        SUCCESS = 1;
        FAIL = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
}
// =======================BANK====================
message BankIn {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string bankCode = 3;
    required uint64 amount = 4;
}
message BankInReply {
    enum Result {
        SUCCESS = 1;
        FAILED = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}
message BankOut {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string bankCode = 3;
    required uint64 amount = 4;
}
message BankOutReply {
    enum Result {
        SUCCESS = 1;
        FAILED = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}
// =======================BANK-NET====================
message BanknetToMomo {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required string bankId = 3;
    required uint64 amount = 4;
    required string cardHolderName = 5;
    required string cardHolderNumber = 6;
    required uint32 cardHolderMonth = 7;
    required uint32 cardHolderYear = 8;
}
message BanknetToMomoReply {
    enum Result {
        SUCCESS = 1;
        FAILED = 2;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    required string transactionId = 3;
    required string merchantTransactionId = 4;
    optional uint32 banketError = 5;
}
message VerifyBanknetOtp {
    required uint32 phoneNumber = 1;
    required uint64 amount = 2;
    required string transactionId = 3;
    required string merchantTransactionId = 4;
    required string otp = 5;
    required string bankId = 6;
}
message VerifyBanknetOtpReply {
    required uint32 phoneNumber = 1;
    required uint32 result = 2;
}

//====================STORE LOCATION===========================
message Location {
    optional double longitude = 1;
    optional double latitude = 2;
}

message StoreInfo {
    optional string name = 3; //:"Cửa Hàng ĐTDĐ Hồng Lý",
    optional string ownerName = 1; //:"Phạm Hồng Lý",
    optional string ownerPhone = 2; //:"0977463763",
    optional Location location = 4; //: { lat :	10.642158	, lng :	106.483106	} ,
    optional string address = 5; //:"9 Khu 2",
    optional uint32 districtId = 6; //: "Huyện:  Bến Lức",
    optional uint32 cityId = 7; //: "Long An",
    optional uint32 areaId = 8; //: "7 Đồng Bằng Sông Cửu Long"},
    optional string street = 9;
    optional string wardName = 10;
}

message GetStoreAround {
    required double longitude = 1;
    required double latitude = 2;
    optional uint32 cityId = 3;
    optional uint32 districtId = 4;
    optional uint32 limit = 5;
}

message GetStoreAroundReply {
    repeated StoreInfo stores = 1;
}

message GetStoreByCode {
    required uint32 cid = 1; // city ID
    optional uint32 did = 2; // district ID
    required uint32 pageSize = 3;
    required uint32 pageNum = 4;
}
message GetStoreByCodeReply {
    required uint64 pageCount = 1;
    repeated StoreInfo stores = 2;
}

message KeyValueData {
    enum CommandType {
        GET = 0;
        PUT = 1;
    }
    required CommandType commandType = 1;
    required string key = 2;
    optional string value = 3;
}
message KeyValueDataReply {
    enum Result {
        SUCCESS = 1;
        FAILED = 2;
    }
    required Result result = 1;
    optional string value = 2;
}

// ====================== AVATAR ================================

message GetAvatarUploadToken {
    required uint32 phoneNumber = 1;
}
message GetAvatarUploadTokenReply {
    required uint32 phoneNumber = 1;
    required string token = 2;
}

// ====================== 123MUA ================================

message Pay123MuaOrder {
    required uint32 phoneNumber = 1;
    required string pin = 2;
    required uint32 receiverPhoneNumber = 3;
    required uint64 amount = 4;
    required string comment = 5;
    required string orderId = 6;
}
message Pay123MuaOrderReply {
    enum Result {
        SUCCESS = 1;
        FAILED    = 2;
        // CoreCommon reasons: Unregistered Agent;
        ACCESS_DENIED = 3;
    }
    required uint32 phoneNumber = 1;
    required Result result = 2;
    optional string transactionId = 3;
}

message TransactionFee {
    optional double dynamicFee = 1;
    optional uint32 staticFee = 2;
    optional string bankId = 3;
    optional uint32 transType = 4;
    optional uint32 channel = 5;
    optional uint32 ioCity = 6;
}


message GetTransactionFee{
}
message GetTransactionFeeReply{
    repeated TransactionFee transactionFees = 1;
}

message PayAirlineTicket {
    required uint32 phoneNumber = 1;
    required string providerId = 2;
    required string billId = 3;
    required uint64 amount = 4;
}
message PayAirlineTicketReply {
    enum Result {
        SUCCESS = 1;
        FAIL = 2;
    }
    optional Result result = 1;
    optional uint64 transactionId = 2;
}
message WithdrawByAgent {
    required uint32 phoneNumber = 1;
    required uint32 agentPhone = 2;
    required uint64 amount = 3;
    optional string comment = 4;
}
message WithdrawByAgentReply {
    enum Result {
        SUCCESS = 1;
        FAIL = 2;
    }
    optional Result result = 1;
    optional string transactionId = 2;
}

message SendSms {
    required uint32 phoneNumber = 1;
    required string content = 2;
}
message SendSmsReply {
}
message BankOutManual {
    required uint32 phoneNumber = 1;
    required string bankId = 2;
    required string holderNumber = 3;
    required uint64 amount = 4;
    required string holderName = 5;
    required string bankName = 6;
    optional string comment = 7;
    required int32 inOutCity = 8;
    optional string bankBranch = 9;
}
message BankOutManualReply {
    required uint32 error = 1;
    required uint64 tranId = 2;
}
message IsMomoer {
    required uint32 phoneNumber = 1;
}
message IsMomoerReply {
    required bool isMomoer = 1;
}
message CountAgentTran {
    required uint32 phone = 1;
}
message CountAgentTranReply {
    required uint64 counter = 1;
}
message GetServiceLayout {

}
message GetServicelayoutReply {

}
message CompeleteTran {
    required int32 tranType  = 1;
    required string otp = 2;
}
message MakeTranReply {
    required int32 error = 1;
}